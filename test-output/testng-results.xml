<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="11" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-13T21:05:33 IST" name="suite" finished-at="2022-09-13T21:05:56 IST" duration-ms="22938">
    <groups>
    </groups>
    <test started-at="2022-09-13T21:05:33 IST" name="RegisterTest" finished-at="2022-09-13T21:05:41 IST" duration-ms="8111">
      <class name="com.automation.Test.RegisterTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:com.automation.Test.RegisterTest@29215f06]" started-at="2022-09-13T21:05:33 IST" name="beforeTest" finished-at="2022-09-13T21:05:36 IST" duration-ms="2596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.automation.Test.RegisterTest@29215f06]" started-at="2022-09-13T21:05:36 IST" name="beforeClass" finished-at="2022-09-13T21:05:38 IST" duration-ms="1759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="registerWithValidData(java.lang.String,java.lang.String)[pri:1, instance:com.automation.Test.RegisterTest@29215f06]" started-at="2022-09-13T21:05:38 IST" name="registerWithValidData" finished-at="2022-09-13T21:05:41 IST" duration-ms="2989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sanchit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithValidData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.automation.Test.RegisterTest@29215f06]" started-at="2022-09-13T21:05:41 IST" name="tearDown" finished-at="2022-09-13T21:05:41 IST" duration-ms="636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automation.Test.RegisterTest -->
    </test> <!-- RegisterTest -->
    <test started-at="2022-09-13T21:05:41 IST" name="LoginTest" finished-at="2022-09-13T21:05:45 IST" duration-ms="3892">
      <class name="com.automation.Test.LoginTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:41 IST" name="beforeTest" finished-at="2022-09-13T21:05:42 IST" duration-ms="750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[start-maximized]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:42 IST" name="beforeClass" finished-at="2022-09-13T21:05:43 IST" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyLoginWithInValidData(java.lang.String,java.lang.String)[pri:1, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:43 IST" name="verifyLoginWithInValidData" data-provider="loginProvider" finished-at="2022-09-13T21:05:43 IST" duration-ms="667" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login Unsuccesful expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login Unsuccesful expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at com.automation.Test.LoginTest.verifyLoginWithInValidData(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInValidData -->
        <test-method signature="verifyLoginWithInValidData(java.lang.String,java.lang.String)[pri:1, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:43 IST" name="verifyLoginWithInValidData" data-provider="loginProvider" finished-at="2022-09-13T21:05:44 IST" duration-ms="271" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login Unsuccesful expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login Unsuccesful expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at com.automation.Test.LoginTest.verifyLoginWithInValidData(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInValidData -->
        <test-method signature="verifyLoginWithInValidData(java.lang.String,java.lang.String)[pri:1, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:44 IST" name="verifyLoginWithInValidData" data-provider="loginProvider" finished-at="2022-09-13T21:05:44 IST" duration-ms="268" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login Unsuccesful expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login Unsuccesful expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at com.automation.Test.LoginTest.verifyLoginWithInValidData(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInValidData -->
        <test-method signature="verifyLoginWithValidData()[pri:2, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:44 IST" name="verifyLoginWithValidData" finished-at="2022-09-13T21:05:45 IST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidData -->
        <test-method signature="verifyLogout()[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:45 IST" name="verifyLogout" description="verify logout" finished-at="2022-09-13T21:05:45 IST" depends-on-methods="com.automation.Test.LoginTest.verifyLoginWithValidData" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogout -->
        <test-method signature="verifyResetPassword()[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:45 IST" name="verifyResetPassword" description="verify password" finished-at="2022-09-13T21:05:45 IST" depends-on-methods="com.automation.Test.LoginTest.verifyLogout" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetPassword -->
        <test-method signature="verifySignUpLink()[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:45 IST" name="verifySignUpLink" description="verify signup" finished-at="2022-09-13T21:05:45 IST" depends-on-methods="com.automation.Test.LoginTest.verifyLogout" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.automation.Test.LoginTest@1ed4ae0f]" started-at="2022-09-13T21:05:45 IST" name="tearDown" finished-at="2022-09-13T21:05:45 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automation.Test.LoginTest -->
    </test> <!-- LoginTest -->
    <test started-at="2022-09-13T21:05:45 IST" name="SearchTest" finished-at="2022-09-13T21:05:52 IST" duration-ms="6731">
      <class name="com.automation.Test.SearchFlightTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:45 IST" name="beforeTest" finished-at="2022-09-13T21:05:46 IST" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[incognito,start-maximized]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:46 IST" name="beforeClass" finished-at="2022-09-13T21:05:47 IST" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="BasicSearch()[pri:1, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:47 IST" name="BasicSearch" finished-at="2022-09-13T21:05:48 IST" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasicSearch -->
        <test-method signature="ParameterizedSearch()[pri:2, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:48 IST" name="ParameterizedSearch" finished-at="2022-09-13T21:05:49 IST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ParameterizedSearch -->
        <test-method signature="RoundTripSearch()[pri:3, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:49 IST" name="RoundTripSearch" finished-at="2022-09-13T21:05:51 IST" duration-ms="1996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RoundTripSearch -->
        <test-method signature="MultiCitySearch()[pri:4, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:51 IST" name="MultiCitySearch" finished-at="2022-09-13T21:05:52 IST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiCitySearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.automation.Test.SearchFlightTest@793f29ff]" started-at="2022-09-13T21:05:52 IST" name="tearDown" finished-at="2022-09-13T21:05:52 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automation.Test.SearchFlightTest -->
    </test> <!-- SearchTest -->
    <test started-at="2022-09-13T21:05:52 IST" name="BookingTest" finished-at="2022-09-13T21:05:56 IST" duration-ms="3920">
      <class name="com.automation.Test.BookingTest">
        <test-method is-config="true" signature="setupBeforeSuit()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:33 IST" name="setupBeforeSuit" finished-at="2022-09-13T21:05:33 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeSuit -->
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:52 IST" name="beforeTest" finished-at="2022-09-13T21:05:53 IST" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[start-maximized]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:53 IST" name="beforeClass" finished-at="2022-09-13T21:05:54 IST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="loadSearchPage()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:54 IST" name="loadSearchPage" finished-at="2022-09-13T21:05:55 IST" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadSearchPage -->
        <test-method signature="verifyBooking()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:55 IST" name="verifyBooking" finished-at="2022-09-13T21:05:56 IST" depends-on-methods="com.automation.Test.BookingTest.loadSearchPage" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBooking -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:56 IST" name="tearDown" finished-at="2022-09-13T21:05:56 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushProperties()[pri:0, instance:com.automation.Test.BookingTest@202b0582]" started-at="2022-09-13T21:05:56 IST" name="flushProperties" finished-at="2022-09-13T21:05:56 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushProperties -->
      </class> <!-- com.automation.Test.BookingTest -->
    </test> <!-- BookingTest -->
  </suite> <!-- suite -->
</testng-results>
